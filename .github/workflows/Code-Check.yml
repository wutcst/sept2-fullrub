name: Code Check  # 工作流程的名称

on:
  push:  # 当代码推送到以下分支时触发工作流程
    branches:
      - master  # master 分支
      - develop  # develop 分支
  pull_request:  # 当在以下分支上发起 pull request 时触发工作流程
    branches:
      - master  # master 分支
      - develop  # develop 分支

jobs:
  check:
    runs-on: ubuntu-latest  # 在 Ubuntu 最新版环境上运行作业

    steps:
      - uses: actions/checkout@v2  # 使用 actions/checkout 动作检出代码

      # 安装依赖项
      - name: Setup Maven  # 设置 Maven
        uses: actions/setup-java@v1  # 使用 actions/setup-java 动作设置 Java 环境
        with:
          java-version: 11  # 设置 Java 版本为 11
      - name: Cache Maven packages  # 缓存 Maven 包
        uses: actions/cache@v2.1.4  # 使用 actions/cache 动作缓存 Maven 包
        with:
          path: ~/.m2/repository  # 缓存路径为 ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}  # 缓存键的生成方式
          restore-keys: |  # 恢复缓存的键
            ${{ runner.os }}-maven-
            ${{ runner.os }}-

      # Code Format Check with Checkstyle
      - name: Checkstyle
        run: |
          mvn checkstyle:checkstyle
          checkstyle_report_path=$(find target/site -name "checkstyle-result.xml")
          if [ -f "$checkstyle_report_path" ]; then
            echo "Checkstyle report: $checkstyle_report_path"
            echo "::error :: Checkstyle found issues in your code. Please fix them before continuing."
            exit 1
          fi

      # Unit Test with JUnit
      - name: JUnit Test  # 步骤的名称
          run: |  # 执行的命令块
            mvn test  # 运行 Maven 的测试命令
            test_report_path=$(find target/surefire-reports -name "TEST-*.xml")  # 查找测试报告文件路径
            if [ -f "$test_report_path" ]; then  # 如果测试报告文件存在
              echo "Test report: $test_report_path"  # 输出测试报告文件路径
              junit_report=$(cat "$test_report_path")  # 读取测试报告文件内容到 junit_report 变量中
              echo "::set-output name=junit_report::$junit_report"  # 通过 GitHub Actions 的 set-output 命令将测试报告内容输出到 GitHub 页面上
            else  # 如果测试报告文件不存在
              echo "::error ::No test report found. Please fix the failed test(s) before continuing."  # 输出错误信息
              exit 1  # 退出命令块并返回错误
            fi